{"version":3,"sources":["header/header.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["textArray","headerArray","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","textIdx","_this2","timeout","setInterval","currentIdx","setState","clearInterval","textThatChanges","length","header","react_default","a","createElement","Fragment","id","className","href","title","dist_default","class","Component","App","header_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"mNAMMA,cAAY,CAAC,yBAA0B,0CAA2C,8BAA8B,mEAAoE,cAAe,uDAAwD,qBAAsB,yDAA2D,gBAAiB,+BAAgC,kBAC7XC,EAAc,CAAC,wBAEAC,cAEjB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CAAEC,QAAS,GAFdR,mFAKM,IAAAS,EAAAN,KAChBA,KAAKO,QAAUC,YAAY,WACvB,IAAIC,EAAaH,EAAKF,MAAMC,QAC5BC,EAAKI,SAAS,CAAEL,QAASI,EAAa,KACvC,oDAIHE,cAAcX,KAAKO,0CAMnB,IAAIK,EAAkBlB,EAAUM,KAAKI,MAAMC,QAAUX,EAAUmB,QAC3DC,EAASnB,EAAYK,KAAKI,MAAMC,QAAUV,EAAYkB,QAC1D,OACIE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAGIH,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAEPJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACJJ,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAaC,KAAK,YAAYC,MAAM,mBAAjD,mBACAP,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAaC,KAAK,IAAIC,MAAM,mBAAzC,mBAEAP,EAAAC,EAAAC,cAAA,MAAIE,GAAG,MAAMC,UAAU,OACnBL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WAAUL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeC,KAAK,sCAAjC,WAKhCN,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAGPL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAACM,EAAAP,EAAD,KACID,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,IAAsCN,IAG1CC,EAAAC,EAAAC,cAAA,yKAIAF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,UACVL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,sCAAqCN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,oBAC9DL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,+CAA8CN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBACvEL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,iCAAgCN,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBACzDL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,mCAAkCN,EAAAC,EAAAC,cAAA,KAAGO,MAAM,sBAK3DT,EAAAC,EAAAC,cAAA,eAAOL,EAAP,QApCpB,YAxBwBa,aCIrBC,MARf,WACE,OACEX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACU,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,6FEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.9b5fbc30.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Typing from 'react-typing-animation';\r\nimport { bounce } from 'react-animations';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n\r\nconst textArray = ['avidly listen to music', 'am trying to make a sustainable society', 'enjoy political drama films','use technology, data, and social science to understand the world', 'love sports', 'explore how technology affects economics and society', 'drink a lot of tea', 'apply machine learning to social and economic problems' , 'enjoy Tex-Mex', 'build and design with others', 'enjoy reading']\r\nconst headerArray = [\"I'm Visakh Madathil.\"];\r\n\r\nexport default class Header extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { textIdx: 0 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timeout = setInterval(() => {\r\n            let currentIdx = this.state.textIdx;\r\n            this.setState({ textIdx: currentIdx + 1 });\r\n        }, 2500);\r\n    }\r\n\r\n    componentDidUnmount() {\r\n        clearInterval(this.timeout);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let textThatChanges = textArray[this.state.textIdx % textArray.length];\r\n        let header = headerArray[this.state.textIdx % headerArray.length];\r\n        return (\r\n            <React.Fragment>\r\n\r\n\r\n                <header id=\"home\">\r\n                    \r\n                    <nav id=\"nav-wrap\">\r\n                        <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n                        <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\r\n                        \r\n                        <ul id=\"nav\" className=\"nav\">\r\n                            <li className=\"current\"><a className=\"smoothscroll\" href=\"https://medium.com/@madathilvisakh\">Blog</a></li>\r\n                        </ul> \r\n                     </nav> \r\n                \r\n\r\n                    <div className=\"row banner\">\r\n\r\n                    \r\n                            <div className=\"banner-text\">\r\n                                <Typing>\r\n                                    <h1 className=\"responsive-headline\"> {header}</h1>\r\n                                </Typing>\r\n\r\n                                <h3>I use data and build technology to create economic and business impact. I'm a budding writer (of words and code), economist, and machine learning engineer.\r\n                                </h3>\r\n\r\n\r\n                                <ul className=\"social\">\r\n                                    <li><a href=\"https://twitter.com/MadathilVisakh\"><i className=\"fa fa-twitter\" /></a></li>\r\n                                    <li><a href=\"https://www.linkedin.com/in/visakh-madathil\"><i className=\"fa fa-linkedin\" /></a></li>\r\n                                    <li><a href=\"https://github.com/vmmadathil\"><i className=\"fa fa-github\" /></a></li>\r\n                                    <li><a href=\"mailto:madathilvisakh@gmail.com\"><i class=\"fa fa-envelope\"/></a></li>\r\n                                </ul>\r\n\r\n\r\n\r\n                                <p> I {textThatChanges} </p>\r\n                            </div>\r\n                    </div> \r\n                </header> {/* Header End */}\r\n\r\n            </React.Fragment>\r\n                    );\r\n                }\r\n            }\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './header/header.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}